//file:noinspection GroovyUnusedAssignment
plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url 'https://jitpack.io'
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url 'https://maven.terraformersmc.com/'
	}
	mavenCentral()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.github.Lortseam.completeconfig:base:${project.completeconfig_version}"
	include "com.github.Lortseam.completeconfig:base:${project.completeconfig_version}"

	modImplementation("com.github.Lortseam.completeconfig:gui-cloth:${project.completeconfig_version}")
	include "com.github.Lortseam.completeconfig:gui-cloth:${project.completeconfig_version}"

	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.getRelease().set(17)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

curseforge {
	if (System.getenv('CURSEFORGE_TOKEN') != null) {
		apiKey = System.getenv('CURSEFORGE_TOKEN')
	} else {
		apiKey = "DUMMY"
	}
	project {
		id = '498496'
		changelog = 'Updated to ${project.minecraft_version}'
		releaseType = 'release'
		addGameVersion '${project.minecraft_version}'

		mainArtifact(remapJar) {
			displayName = "Elytra AutoPilot ${project.version}"
			relations {
				requiredDependency 'fabric-api'
				optionalDependency 'cloth-config'
				optionalDependency 'modmenu'
			}
		}
	}
}
